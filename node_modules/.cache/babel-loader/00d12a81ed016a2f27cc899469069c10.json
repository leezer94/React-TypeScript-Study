{"ast":null,"code":"var _jsxFileName = \"/Users/leezer/Desktop/codeStates/REACT_TYPESCRIPT_STUDY/react-study/src/components/@commons/Input/Input.tsx\";\nimport React, { forwardRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Input = /*#__PURE__*/forwardRef(_c = (props, forwardRef) => {\n  const {\n    type,\n    onKeyPressEvent\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: type,\n    ref: forwardRef,\n    onKeyPress: onKeyPressEvent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Input;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Input$forwardRef\");\n$RefreshReg$(_c2, \"Input\");","map":{"version":3,"names":["React","forwardRef","Input","props","type","onKeyPressEvent"],"sources":["/Users/leezer/Desktop/codeStates/REACT_TYPESCRIPT_STUDY/react-study/src/components/@commons/Input/Input.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\n\ntype props = {\n  type: string;\n  onKeyPressEvent: (e: any) => void;\n};\n\nexport const Input = forwardRef<HTMLInputElement, props>((props, forwardRef) => {\n  const { type, onKeyPressEvent } = props;\n\n  return <input type={type} ref={forwardRef} onKeyPress={onKeyPressEvent}></input>;\n});\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;AAOA,OAAO,MAAMC,KAAK,gBAAGD,UAAU,MAA0B,CAACE,KAAD,EAAQF,UAAR,KAAuB;EAC9E,MAAM;IAAEG,IAAF;IAAQC;EAAR,IAA4BF,KAAlC;EAEA,oBAAO;IAAO,IAAI,EAAEC,IAAb;IAAmB,GAAG,EAAEH,UAAxB;IAAoC,UAAU,EAAEI;EAAhD;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAJ8B,CAAxB;MAAMH,K"},"metadata":{},"sourceType":"module"}