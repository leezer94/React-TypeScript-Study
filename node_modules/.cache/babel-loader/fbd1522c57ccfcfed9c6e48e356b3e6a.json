{"ast":null,"code":"var _jsxFileName = \"/Users/leezer/Desktop/codeStates/REACT_TYPESCRIPT_STUDY/react-study/src/components/RpcGame/RcpDisplayContainer.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Form } from '../@commons/Form/Form';\nimport { Button } from '../@commons/Button/Button';\nimport { P } from '../@commons/P/P';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RpsDisplayContainer = props => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [count, setCount] = useState(0);\n  const {\n    state,\n    handleState\n  } = props;\n  const {\n    currentMove,\n    computerMove\n  } = state;\n  const form = useRef();\n\n  const printCurrentMove = () => {\n    let currentEmoji;\n\n    if (currentMove === '가위') {\n      currentEmoji = '✌️';\n    } else if (currentMove === '바위') {\n      currentEmoji = '✊🏻';\n    } else if (currentMove === '보') {\n      currentEmoji = '🖐🏿';\n    }\n\n    return currentEmoji;\n  };\n\n  const handleGameResult = () => {\n    let result = '';\n\n    if (computerMove === '가위') {\n      if (currentMove === '바위') {\n        result = '컴퓨터 승리';\n      } else if (currentMove === '가위') {\n        result = '비겼습니다.';\n      } else if (currentMove === '보') {\n        result = '유저 승리';\n      }\n    } else if (computerMove === '바위') {\n      if (currentMove === '바위') {\n        result = '비겼습니다.';\n      } else if (currentMove === '가위') {\n        result = '컴퓨터 승리';\n      } else if (currentMove === '보') {\n        result = '유저 승리';\n      }\n    } else if (computerMove === '보') {\n      if (currentMove === '바위') {\n        result = '컴퓨터 승리';\n      } else if (currentMove === '가위') {\n        result = '유저 승리';\n      } else if (currentMove === '보') {\n        result = '비겼습니다';\n      }\n    }\n\n    handleState({ ...state,\n      gameResult: result\n    });\n  };\n\n  const onClickHandButton = e => {\n    handleState({ ...state,\n      currentMove: e.target.textContent\n    });\n  };\n\n  const useInterval = (callback, delay) => {\n    _s();\n\n    const savedCallback = useRef(); // 최근에 들어온 callback을 저장할 ref를 하나 만든다.\n\n    useEffect(() => {\n      savedCallback.current = callback; // callback이 바뀔 때마다 ref를 업데이트 해준다.\n    }, [callback]);\n    useEffect(() => {\n      const tick = () => {\n        savedCallback.current(); // tick이 실행되면 callback 함수를 실행시킨다.\n\n        console.log('aa');\n        console.log(count);\n      };\n\n      if (delay !== null) {\n        // 만약 delay가 null이 아니라면\n        let id = setInterval(tick, delay); // delay에 맞추어 interval을 새로 실행시킨다.\n\n        return () => clearInterval(id); // unmount될 때 clearInterval을 해준다.\n      }\n    }, [delay]); // delay가 바뀔 때마다 새로 실행된다.\n  };\n\n  _s(useInterval, \"dqNZMqbncP+HtqBlD20aSNv0Ugk=\");\n\n  const createRPSButtons = () => {\n    const movementArray = ['가위', '바위', '보'];\n    return movementArray.map((el, i) => {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        title: el,\n        onClickEvent: onClickHandButton\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    ref: form,\n    onSubmit: e => e.preventDefault(),\n    children: [/*#__PURE__*/_jsxDEV(P, {\n      title: printCurrentMove()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), createRPSButtons(), /*#__PURE__*/_jsxDEV(P, {\n      title: printCurrentMove(),\n      style: {\n        fontSize: 80,\n        margin: 10,\n        padding: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), useInterval(() => {\n      setCount(() => count + 1);\n    }, 1000)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(RpsDisplayContainer, \"DC6PbBmpTmsHib5mziGdNQNeSL0=\", true);\n\n_c = RpsDisplayContainer;\nexport default RpsDisplayContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RpsDisplayContainer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Form","Button","P","RpsDisplayContainer","props","count","setCount","state","handleState","currentMove","computerMove","form","printCurrentMove","currentEmoji","handleGameResult","result","gameResult","onClickHandButton","e","target","textContent","useInterval","callback","delay","savedCallback","current","tick","console","log","id","setInterval","clearInterval","createRPSButtons","movementArray","map","el","i","preventDefault","fontSize","margin","padding"],"sources":["/Users/leezer/Desktop/codeStates/REACT_TYPESCRIPT_STUDY/react-study/src/components/RpcGame/RcpDisplayContainer.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Form } from '../@commons/Form/Form';\nimport { Button } from '../@commons/Button/Button';\nimport { P } from '../@commons/P/P';\n\nconst RpsDisplayContainer = (props) => {\n  const [count, setCount] = useState(0);\n\n  const { state, handleState } = props;\n  const { currentMove, computerMove } = state;\n  const form = useRef();\n\n  const printCurrentMove = () => {\n    let currentEmoji;\n\n    if (currentMove === '가위') {\n      currentEmoji = '✌️';\n    } else if (currentMove === '바위') {\n      currentEmoji = '✊🏻';\n    } else if (currentMove === '보') {\n      currentEmoji = '🖐🏿';\n    }\n\n    return currentEmoji;\n  };\n\n  const handleGameResult = () => {\n    let result = '';\n\n    if (computerMove === '가위') {\n      if (currentMove === '바위') {\n        result = '컴퓨터 승리';\n      } else if (currentMove === '가위') {\n        result = '비겼습니다.';\n      } else if (currentMove === '보') {\n        result = '유저 승리';\n      }\n    } else if (computerMove === '바위') {\n      if (currentMove === '바위') {\n        result = '비겼습니다.';\n      } else if (currentMove === '가위') {\n        result = '컴퓨터 승리';\n      } else if (currentMove === '보') {\n        result = '유저 승리';\n      }\n    } else if (computerMove === '보') {\n      if (currentMove === '바위') {\n        result = '컴퓨터 승리';\n      } else if (currentMove === '가위') {\n        result = '유저 승리';\n      } else if (currentMove === '보') {\n        result = '비겼습니다';\n      }\n    }\n\n    handleState({\n      ...state,\n      gameResult: result,\n    });\n  };\n\n  const onClickHandButton = (e) => {\n    handleState({\n      ...state,\n      currentMove: e.target.textContent,\n    });\n  };\n\n  const useInterval = (callback, delay) => {\n    const savedCallback = useRef(); // 최근에 들어온 callback을 저장할 ref를 하나 만든다.\n\n    useEffect(() => {\n      savedCallback.current = callback; // callback이 바뀔 때마다 ref를 업데이트 해준다.\n    }, [callback]);\n\n    useEffect(() => {\n      const tick = () => {\n        savedCallback.current(); // tick이 실행되면 callback 함수를 실행시킨다.\n\n        console.log('aa');\n        console.log(count);\n      };\n      if (delay !== null) {\n        // 만약 delay가 null이 아니라면\n        let id = setInterval(tick, delay); // delay에 맞추어 interval을 새로 실행시킨다.\n        return () => clearInterval(id); // unmount될 때 clearInterval을 해준다.\n      }\n    }, [delay]); // delay가 바뀔 때마다 새로 실행된다.\n  };\n\n  const createRPSButtons = () => {\n    const movementArray = ['가위', '바위', '보'];\n\n    return movementArray.map((el, i) => {\n      return <Button type='submit' key={i} title={el} onClickEvent={onClickHandButton} />;\n    });\n  };\n\n  return (\n    <Form ref={form} onSubmit={(e) => e.preventDefault()}>\n      <P title={printCurrentMove()} />\n      {createRPSButtons()}\n      <P title={printCurrentMove()} style={{ fontSize: 80, margin: 10, padding: 0 }} />\n      {useInterval(() => {\n        setCount(() => count + 1);\n      }, 1000)}\n    </Form>\n  );\n};\n\nexport default RpsDisplayContainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}