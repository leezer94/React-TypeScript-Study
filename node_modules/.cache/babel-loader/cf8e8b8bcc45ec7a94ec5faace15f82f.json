{"ast":null,"code":"import _objectSpread from\"/Users/leezer/Desktop/codeStates/REACT_TYPESCRIPT_STUDY/react-study/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from'react';import{DigitButton,P}from'../../components';import{createEmptyArray}from'../../utils';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DigitButtonContainer=function DigitButtonContainer(_ref){var state=_ref.state,setState=_ref.setState;var handleFirstNumber=function handleFirstNumber(digit){var firstNumber=state.firstNumber,secondNumber=state.secondNumber;firstNumber=Number(digit);setState(_objectSpread(_objectSpread({},state),{},{firstNumber:firstNumber,sum:firstNumber*secondNumber}));};var buttonTemplates=function buttonTemplates(){var templates=createEmptyArray(9);templates.map(function(el,i){return templates[i]=/*#__PURE__*/_jsx(DigitButton,{digit:i+1,updateNumber:handleFirstNumber},i);});return templates;};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(P,{content:'구구단 몇단?',className:'',style:{}}),buttonTemplates()]});};export default DigitButtonContainer;","map":{"version":3,"names":["React","DigitButton","P","createEmptyArray","DigitButtonContainer","state","setState","handleFirstNumber","digit","firstNumber","secondNumber","Number","sum","buttonTemplates","templates","map","el","i"],"sources":["/Users/leezer/Desktop/codeStates/REACT_TYPESCRIPT_STUDY/react-study/src/pages/multiplication-table/DigitButtonContainer.tsx"],"sourcesContent":["import React from 'react';\nimport { DigitButton, P } from '../../components';\nimport { createEmptyArray } from '../../utils';\n\ntype props = {\n  state: state;\n  setState: setState;\n};\n\ntype setState = any;\n\ntype state = {\n  firstNumber: number;\n  secondNumber: number;\n  sum: number;\n};\n\nconst DigitButtonContainer = ({ state, setState }: props) => {\n  const handleFirstNumber = (digit: number) => {\n    let { firstNumber, secondNumber } = state;\n\n    firstNumber = Number(digit);\n\n    setState({\n      ...state,\n      firstNumber,\n      sum: firstNumber * secondNumber,\n    });\n  };\n\n  const buttonTemplates = () => {\n    const templates: any[] = createEmptyArray(9);\n    templates.map((el, i) => {\n      return (templates[i] = <DigitButton key={i} digit={i + 1} updateNumber={handleFirstNumber} />);\n    });\n\n    return templates;\n  };\n\n  return (\n    <>\n      <P content={'구구단 몇단?'} className={''} style={{}} />\n      {buttonTemplates()}\n    </>\n  );\n};\n\nexport default DigitButtonContainer;\n"],"mappings":"wJAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,CAAsBC,CAAtB,KAA+B,kBAA/B,CACA,OAASC,gBAAT,KAAiC,aAAjC,C,6IAeA,GAAMC,qBAAoB,CAAG,QAAvBA,qBAAuB,MAAgC,IAA7BC,MAA6B,MAA7BA,KAA6B,CAAtBC,QAAsB,MAAtBA,QAAsB,CAC3D,GAAMC,kBAAiB,CAAG,QAApBA,kBAAoB,CAACC,KAAD,CAAmB,CAC3C,GAAMC,YAAN,CAAoCJ,KAApC,CAAMI,WAAN,CAAmBC,YAAnB,CAAoCL,KAApC,CAAmBK,YAAnB,CAEAD,WAAW,CAAGE,MAAM,CAACH,KAAD,CAApB,CAEAF,QAAQ,gCACHD,KADG,MAENI,WAAW,CAAXA,WAFM,CAGNG,GAAG,CAAEH,WAAW,CAAGC,YAHb,GAAR,CAKD,CAVD,CAYA,GAAMG,gBAAe,CAAG,QAAlBA,gBAAkB,EAAM,CAC5B,GAAMC,UAAgB,CAAGX,gBAAgB,CAAC,CAAD,CAAzC,CACAW,SAAS,CAACC,GAAV,CAAc,SAACC,EAAD,CAAKC,CAAL,CAAW,CACvB,MAAQH,UAAS,CAACG,CAAD,CAAT,cAAe,KAAC,WAAD,EAAqB,KAAK,CAAEA,CAAC,CAAG,CAAhC,CAAmC,YAAY,CAAEV,iBAAjD,EAAkBU,CAAlB,CAAvB,CACD,CAFD,EAIA,MAAOH,UAAP,CACD,CAPD,CASA,mBACE,wCACE,KAAC,CAAD,EAAG,OAAO,CAAE,SAAZ,CAAuB,SAAS,CAAE,EAAlC,CAAsC,KAAK,CAAE,EAA7C,EADF,CAEGD,eAAe,EAFlB,GADF,CAMD,CA5BD,CA8BA,cAAeT,qBAAf"},"metadata":{},"sourceType":"module"}