{"ast":null,"code":"var _jsxFileName = \"/Users/leezer/Desktop/codeStates/REACT_TYPESCRIPT_STUDY/react-study/src/components/multiplication-table/multiplication-table.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { generateRandomNumber } from '../../utils/mathUtils.js';\nimport DigitButtonContainer from './DigitButtonContainer.js';\nimport MultiplicationMainContainer from './Game-main-container.js'; //TODO 아토믹 패턴 ?? 컴포넌트화 기준 나누기?? 타입스크립트 적용?? styledComponent 적용 ?\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MultiplicationTable = () => {\n  _s();\n\n  const [state, setState] = useState({\n    firstNumber: 9,\n    secondNumber: 2,\n    sum: 9 * 2\n  });\n  const [evaluation, setEvaluation] = useState(true); // Handlers\n\n  const updateStateNumbers = () => {\n    let {\n      firstNumber,\n      secondNumber\n    } = state;\n    firstNumber = generateRandomNumber(1, 9);\n    secondNumber = generateRandomNumber(1, 9);\n    setState({\n      firstNumber,\n      secondNumber,\n      sum: firstNumber * secondNumber\n    });\n    setEvaluation(true);\n  };\n\n  const handleEvaluation = boolean => {\n    setEvaluation(boolean);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"multiplication_table-container\",\n    children: [/*#__PURE__*/_jsxDEV(DigitButtonContainer, {\n      state: state,\n      setState: setState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MultiplicationMainContainer, {\n      state: state,\n      updateStateNumbers: updateStateNumbers,\n      evaluation: evaluation,\n      handleEvaluation: handleEvaluation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MultiplicationTable, \"oCFlfx+9DO76AVbNv/zsTsGy0E8=\");\n\n_c = MultiplicationTable;\nexport default MultiplicationTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultiplicationTable\");","map":{"version":3,"names":["React","useState","generateRandomNumber","DigitButtonContainer","MultiplicationMainContainer","MultiplicationTable","state","setState","firstNumber","secondNumber","sum","evaluation","setEvaluation","updateStateNumbers","handleEvaluation","boolean"],"sources":["/Users/leezer/Desktop/codeStates/REACT_TYPESCRIPT_STUDY/react-study/src/components/multiplication-table/multiplication-table.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { generateRandomNumber } from '../../utils/mathUtils.js';\nimport DigitButtonContainer from './DigitButtonContainer.js';\nimport MultiplicationMainContainer from './Game-main-container.js';\n//TODO 아토믹 패턴 ?? 컴포넌트화 기준 나누기?? 타입스크립트 적용?? styledComponent 적용 ?\n\nconst MultiplicationTable = () => {\n  const [state, setState] = useState({ firstNumber: 9, secondNumber: 2, sum: 9 * 2 });\n  const [evaluation, setEvaluation] = useState(true);\n\n  // Handlers\n\n  const updateStateNumbers = () => {\n    let { firstNumber, secondNumber } = state;\n\n    firstNumber = generateRandomNumber(1, 9);\n    secondNumber = generateRandomNumber(1, 9);\n\n    setState({ firstNumber, secondNumber, sum: firstNumber * secondNumber });\n    setEvaluation(true);\n  };\n\n  const handleEvaluation = (boolean) => {\n    setEvaluation(boolean);\n  };\n\n  return (\n    <div className='multiplication_table-container'>\n      <DigitButtonContainer state={state} setState={setState} />\n      <MultiplicationMainContainer state={state} updateStateNumbers={updateStateNumbers} evaluation={evaluation} handleEvaluation={handleEvaluation} />\n    </div>\n  );\n};\n\nexport default MultiplicationTable;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,oBAAT,QAAqC,0BAArC;AACA,OAAOC,oBAAP,MAAiC,2BAAjC;AACA,OAAOC,2BAAP,MAAwC,0BAAxC,C,CACA;;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;EAAA;;EAChC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC;IAAEO,WAAW,EAAE,CAAf;IAAkBC,YAAY,EAAE,CAAhC;IAAmCC,GAAG,EAAE,IAAI;EAA5C,CAAD,CAAlC;EACA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,IAAD,CAA5C,CAFgC,CAIhC;;EAEA,MAAMY,kBAAkB,GAAG,MAAM;IAC/B,IAAI;MAAEL,WAAF;MAAeC;IAAf,IAAgCH,KAApC;IAEAE,WAAW,GAAGN,oBAAoB,CAAC,CAAD,EAAI,CAAJ,CAAlC;IACAO,YAAY,GAAGP,oBAAoB,CAAC,CAAD,EAAI,CAAJ,CAAnC;IAEAK,QAAQ,CAAC;MAAEC,WAAF;MAAeC,YAAf;MAA6BC,GAAG,EAAEF,WAAW,GAAGC;IAAhD,CAAD,CAAR;IACAG,aAAa,CAAC,IAAD,CAAb;EACD,CARD;;EAUA,MAAME,gBAAgB,GAAIC,OAAD,IAAa;IACpCH,aAAa,CAACG,OAAD,CAAb;EACD,CAFD;;EAIA,oBACE;IAAK,SAAS,EAAC,gCAAf;IAAA,wBACE,QAAC,oBAAD;MAAsB,KAAK,EAAET,KAA7B;MAAoC,QAAQ,EAAEC;IAA9C;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,2BAAD;MAA6B,KAAK,EAAED,KAApC;MAA2C,kBAAkB,EAAEO,kBAA/D;MAAmF,UAAU,EAAEF,UAA/F;MAA2G,gBAAgB,EAAEG;IAA7H;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CA1BD;;GAAMT,mB;;KAAAA,mB;AA4BN,eAAeA,mBAAf"},"metadata":{},"sourceType":"module"}