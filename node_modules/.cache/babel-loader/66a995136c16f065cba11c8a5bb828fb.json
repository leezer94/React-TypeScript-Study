{"ast":null,"code":"var _jsxFileName = \"/Users/leezer/Desktop/codeStates/REACT_TYPESCRIPT_STUDY/react-study/src/components/RpsGame/RpsDisplayContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Form } from '../@commons/Form/Form';\nimport { Button } from '../@commons/Button/Button';\nimport { P } from '../@commons/P/P';\nimport { generateRandomNumber } from '../../utils/mathUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RpsDisplayContainer = props => {\n  _s();\n\n  const {\n    state,\n    handleState\n  } = props;\n  const {\n    currentMove,\n    gameResult\n  } = state;\n  const [isPlaying, setIsPlaying] = useState(true);\n  const form = useRef();\n  const images = ['✌️', '✊🏻', '🖐🏿'];\n  const [image, setImage] = useState(0);\n  const interval = useRef();\n\n  const printCurrentMove = () => {\n    let currentEmoji;\n\n    if (currentMove === '가위') {\n      currentEmoji = '✌️';\n    } else if (currentMove === '바위') {\n      currentEmoji = '✊🏻';\n    } else if (currentMove === '보') {\n      currentEmoji = '🖐🏿';\n    }\n\n    return currentEmoji;\n  };\n\n  const handleHandImage = () => {\n    if (image === images.length - 1) {\n      setImage(0);\n    } else {\n      setImage(image + 1);\n    }\n  };\n\n  useEffect(() => {\n    interval.current = setInterval(handleHandImage, 500);\n    return () => {\n      clearInterval(interval.current);\n    };\n  }, [image]);\n\n  const handleGameResult = (currentMove, computerMove) => {\n    let result = '';\n    console.log(currentMove, 'user');\n    console.log(computerMove, 'computer');\n\n    if (computerMove === images[0]) {\n      if (currentMove === '바위') {\n        result = '컴퓨터 승리';\n      } else if (currentMove === '가위') {\n        result = '비겼습니다.';\n      } else if (currentMove === '보') {\n        result = '유저 승리';\n      }\n    } else if (computerMove === images[1]) {\n      if (currentMove === '바위') {\n        result = '비겼습니다.';\n      } else if (currentMove === '가위') {\n        result = '컴퓨터 승리';\n      } else if (currentMove === '보') {\n        result = '유저 승리';\n      }\n    } else if (computerMove === images[2]) {\n      if (currentMove === '바위') {\n        result = '컴퓨터 승리';\n      } else if (currentMove === '가위') {\n        result = '유저 승리';\n      } else if (currentMove === '보') {\n        result = '비겼습니다';\n      }\n    }\n\n    return result;\n  };\n\n  const onClickHandButton = e => {\n    clearInterval(interval.current);\n    setIsPlaying(!isPlaying);\n    handleState({ ...state,\n      currentMove: e.target.textContent,\n      computerMove: images[image],\n      gameResult: handleGameResult(e.target.textContent, images[image])\n    });\n\n    if (isPlaying) {\n      interval.current = setInterval(handleHandImage, 500);\n    }\n  };\n\n  const createRPSButtons = () => {\n    const movementArray = ['가위', '바위', '보'];\n    return movementArray.map((el, i) => {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        title: el,\n        onClickEvent: onClickHandButton\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    ref: form,\n    onSubmit: e => e.preventDefault(),\n    children: [/*#__PURE__*/_jsxDEV(P, {\n      title: 'Computer',\n      style: {\n        color: 'blue',\n        fontWeight: 600\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(P, {\n      title: images[image],\n      style: {\n        fontSize: 80,\n        margin: 10,\n        padding: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), createRPSButtons(), /*#__PURE__*/_jsxDEV(P, {\n      title: 'User',\n      style: {\n        color: 'red',\n        fontWeight: 600\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(P, {\n      title: printCurrentMove(),\n      style: {\n        fontSize: 80,\n        margin: 10,\n        padding: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), console.log(isPlaying)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RpsDisplayContainer, \"1xGGvhrJr/RpNe+sLqS1NfhM6q0=\");\n\n_c = RpsDisplayContainer;\nexport default RpsDisplayContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RpsDisplayContainer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Form","Button","P","generateRandomNumber","RpsDisplayContainer","props","state","handleState","currentMove","gameResult","isPlaying","setIsPlaying","form","images","image","setImage","interval","printCurrentMove","currentEmoji","handleHandImage","length","current","setInterval","clearInterval","handleGameResult","computerMove","result","console","log","onClickHandButton","e","target","textContent","createRPSButtons","movementArray","map","el","i","preventDefault","color","fontWeight","fontSize","margin","padding"],"sources":["/Users/leezer/Desktop/codeStates/REACT_TYPESCRIPT_STUDY/react-study/src/components/RpsGame/RpsDisplayContainer.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Form } from '../@commons/Form/Form';\nimport { Button } from '../@commons/Button/Button';\nimport { P } from '../@commons/P/P';\nimport { generateRandomNumber } from '../../utils/mathUtils';\n\nconst RpsDisplayContainer = (props) => {\n  const { state, handleState } = props;\n  const { currentMove, gameResult } = state;\n  const [isPlaying, setIsPlaying] = useState(true);\n\n  const form = useRef();\n\n  const images = ['✌️', '✊🏻', '🖐🏿'];\n  const [image, setImage] = useState(0);\n  const interval = useRef();\n\n  const printCurrentMove = () => {\n    let currentEmoji;\n\n    if (currentMove === '가위') {\n      currentEmoji = '✌️';\n    } else if (currentMove === '바위') {\n      currentEmoji = '✊🏻';\n    } else if (currentMove === '보') {\n      currentEmoji = '🖐🏿';\n    }\n\n    return currentEmoji;\n  };\n\n  const handleHandImage = () => {\n    if (image === images.length - 1) {\n      setImage(0);\n    } else {\n      setImage(image + 1);\n    }\n  };\n\n  useEffect(() => {\n    interval.current = setInterval(handleHandImage, 500);\n\n    return () => {\n      clearInterval(interval.current);\n    };\n  }, [image]);\n\n  const handleGameResult = (currentMove, computerMove) => {\n    let result = '';\n\n    console.log(currentMove, 'user');\n    console.log(computerMove, 'computer');\n\n    if (computerMove === images[0]) {\n      if (currentMove === '바위') {\n        result = '컴퓨터 승리';\n      } else if (currentMove === '가위') {\n        result = '비겼습니다.';\n      } else if (currentMove === '보') {\n        result = '유저 승리';\n      }\n    } else if (computerMove === images[1]) {\n      if (currentMove === '바위') {\n        result = '비겼습니다.';\n      } else if (currentMove === '가위') {\n        result = '컴퓨터 승리';\n      } else if (currentMove === '보') {\n        result = '유저 승리';\n      }\n    } else if (computerMove === images[2]) {\n      if (currentMove === '바위') {\n        result = '컴퓨터 승리';\n      } else if (currentMove === '가위') {\n        result = '유저 승리';\n      } else if (currentMove === '보') {\n        result = '비겼습니다';\n      }\n    }\n\n    return result;\n  };\n\n  const onClickHandButton = (e) => {\n    clearInterval(interval.current);\n    setIsPlaying(!isPlaying);\n\n    handleState({\n      ...state,\n      currentMove: e.target.textContent,\n      computerMove: images[image],\n      gameResult: handleGameResult(e.target.textContent, images[image]),\n    });\n\n    if (isPlaying) {\n      interval.current = setInterval(handleHandImage, 500);\n    }\n  };\n\n  const createRPSButtons = () => {\n    const movementArray = ['가위', '바위', '보'];\n\n    return movementArray.map((el, i) => {\n      return <Button type='submit' key={i} title={el} onClickEvent={onClickHandButton} />;\n    });\n  };\n\n  return (\n    <Form ref={form} onSubmit={(e) => e.preventDefault()}>\n      <P title={'Computer'} style={{ color: 'blue', fontWeight: 600 }} />\n      <P title={images[image]} style={{ fontSize: 80, margin: 10, padding: 0 }} />\n      {createRPSButtons()}\n      <P title={'User'} style={{ color: 'red', fontWeight: 600 }} />\n      <P title={printCurrentMove()} style={{ fontSize: 80, margin: 10, padding: 0 }} />\n      {console.log(isPlaying)}\n    </Form>\n  );\n};\n\nexport default RpsDisplayContainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}