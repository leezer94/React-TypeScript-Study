{"ast":null,"code":"var _jsxFileName = \"/Users/leezer/Desktop/codeStates/REACT_TYPESCRIPT_STUDY/react-study/src/components/RpcGame/RcpDisplayContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { Form } from '../@commons/Form/Form';\nimport { Button } from '../@commons/Button/Button';\nimport { P } from '../@commons/P/P';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RpsDisplayContainer = props => {\n  _s();\n\n  const {\n    currentMove,\n    handleCurrentMove\n  } = props;\n  const form = useRef();\n\n  const updateCurrentMove = e => {\n    handleCurrentMove({\n      currentMove: e.target.textContent\n    });\n  };\n\n  const printCurrentMove = () => {\n    if (currentMove === '가위') {\n      return '✌️';\n    } else if (currentMove === '바위') {\n      return '✊🏻';\n    } else if (currentMove === '보') {\n      return '🖐🏿';\n    }\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      console.log('aa');\n    }, 500);\n    return () => clearInterval(interval);\n  }, [currentMove]);\n\n  const createRPCButtons = () => {\n    const movementArray = ['가위', '바위', '보'];\n    return movementArray.map((el, i) => {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        title: el,\n        onClickEvent: updateCurrentMove\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    ref: form,\n    onSubmit: e => e.preventDefault(),\n    children: [/*#__PURE__*/_jsxDEV(P, {\n      title: printCurrentMove()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), createRPCButtons(), /*#__PURE__*/_jsxDEV(P, {\n      title: printCurrentMove(),\n      style: {\n        fontSize: 80,\n        margin: 10,\n        padding: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RpsDisplayContainer, \"aLNReAk7EYWZilPwC86cx2bJ/tc=\");\n\n_c = RpsDisplayContainer;\nexport default RpsDisplayContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RpsDisplayContainer\");","map":{"version":3,"names":["React","useEffect","useRef","Form","Button","P","RpsDisplayContainer","props","currentMove","handleCurrentMove","form","updateCurrentMove","e","target","textContent","printCurrentMove","interval","setInterval","console","log","clearInterval","createRPCButtons","movementArray","map","el","i","preventDefault","fontSize","margin","padding"],"sources":["/Users/leezer/Desktop/codeStates/REACT_TYPESCRIPT_STUDY/react-study/src/components/RpcGame/RcpDisplayContainer.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Form } from '../@commons/Form/Form';\nimport { Button } from '../@commons/Button/Button';\nimport { P } from '../@commons/P/P';\n\nconst RpsDisplayContainer = (props) => {\n  const { currentMove, handleCurrentMove } = props;\n\n  const form = useRef();\n\n  const updateCurrentMove = (e) => {\n    handleCurrentMove({\n      currentMove: e.target.textContent,\n    });\n  };\n\n  const printCurrentMove = () => {\n    if (currentMove === '가위') {\n      return '✌️';\n    } else if (currentMove === '바위') {\n      return '✊🏻';\n    } else if (currentMove === '보') {\n      return '🖐🏿';\n    }\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      console.log('aa');\n    }, 500);\n    return () => clearInterval(interval);\n  }, [currentMove]);\n\n  const createRPCButtons = () => {\n    const movementArray = ['가위', '바위', '보'];\n\n    return movementArray.map((el, i) => {\n      return <Button type='submit' key={i} title={el} onClickEvent={updateCurrentMove} />;\n    });\n  };\n\n  return (\n    <Form ref={form} onSubmit={(e) => e.preventDefault()}>\n      <P title={printCurrentMove()} />\n      {createRPCButtons()}\n      <P title={printCurrentMove()} style={{ fontSize: 80, margin: 10, padding: 0 }} />\n    </Form>\n  );\n};\n\nexport default RpsDisplayContainer;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,MAAT,QAAuB,2BAAvB;AACA,SAASC,CAAT,QAAkB,iBAAlB;;;AAEA,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;EAAA;;EACrC,MAAM;IAAEC,WAAF;IAAeC;EAAf,IAAqCF,KAA3C;EAEA,MAAMG,IAAI,GAAGR,MAAM,EAAnB;;EAEA,MAAMS,iBAAiB,GAAIC,CAAD,IAAO;IAC/BH,iBAAiB,CAAC;MAChBD,WAAW,EAAEI,CAAC,CAACC,MAAF,CAASC;IADN,CAAD,CAAjB;EAGD,CAJD;;EAMA,MAAMC,gBAAgB,GAAG,MAAM;IAC7B,IAAIP,WAAW,KAAK,IAApB,EAA0B;MACxB,OAAO,IAAP;IACD,CAFD,MAEO,IAAIA,WAAW,KAAK,IAApB,EAA0B;MAC/B,OAAO,KAAP;IACD,CAFM,MAEA,IAAIA,WAAW,KAAK,GAApB,EAAyB;MAC9B,OAAO,MAAP;IACD;EACF,CARD;;EAUAP,SAAS,CAAC,MAAM;IACd,MAAMe,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCC,OAAO,CAACC,GAAR,CAAY,IAAZ;IACD,CAF2B,EAEzB,GAFyB,CAA5B;IAGA,OAAO,MAAMC,aAAa,CAACJ,QAAD,CAA1B;EACD,CALQ,EAKN,CAACR,WAAD,CALM,CAAT;;EAOA,MAAMa,gBAAgB,GAAG,MAAM;IAC7B,MAAMC,aAAa,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,GAAb,CAAtB;IAEA,OAAOA,aAAa,CAACC,GAAd,CAAkB,CAACC,EAAD,EAAKC,CAAL,KAAW;MAClC,oBAAO,QAAC,MAAD;QAAQ,IAAI,EAAC,QAAb;QAA8B,KAAK,EAAED,EAArC;QAAyC,YAAY,EAAEb;MAAvD,GAA2Bc,CAA3B;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAFM,CAAP;EAGD,CAND;;EAQA,oBACE,QAAC,IAAD;IAAM,GAAG,EAAEf,IAAX;IAAiB,QAAQ,EAAGE,CAAD,IAAOA,CAAC,CAACc,cAAF,EAAlC;IAAA,wBACE,QAAC,CAAD;MAAG,KAAK,EAAEX,gBAAgB;IAA1B;MAAA;MAAA;MAAA;IAAA,QADF,EAEGM,gBAAgB,EAFnB,eAGE,QAAC,CAAD;MAAG,KAAK,EAAEN,gBAAgB,EAA1B;MAA8B,KAAK,EAAE;QAAEY,QAAQ,EAAE,EAAZ;QAAgBC,MAAM,EAAE,EAAxB;QAA4BC,OAAO,EAAE;MAArC;IAArC;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CA3CD;;GAAMvB,mB;;KAAAA,mB;AA6CN,eAAeA,mBAAf"},"metadata":{},"sourceType":"module"}