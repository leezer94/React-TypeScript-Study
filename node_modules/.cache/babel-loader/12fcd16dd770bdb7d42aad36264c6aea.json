{"ast":null,"code":"var _jsxFileName = \"/Users/leezer/Desktop/codeStates/REACT_TYPESCRIPT_STUDY/react-study/src/pages/RpsGame/RpsDisplayContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Form, Button, P } from '../../components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RpsDisplayContainer = props => {\n  _s();\n\n  const {\n    state,\n    handleState,\n    setScore\n  } = props;\n  let {\n    currentMove\n  } = state;\n  const images = ['✌️', '✊🏻', '🖐🏿'];\n  const [image, setImage] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(true);\n  const interval = useRef();\n\n  const printCurrentMove = () => {\n    let currentEmoji;\n\n    if (currentMove === '가위') {\n      currentEmoji = '✌️';\n    } else if (currentMove === '바위') {\n      currentEmoji = '✊🏻';\n    } else if (currentMove === '보') {\n      currentEmoji = '🖐🏿';\n    }\n\n    return currentEmoji;\n  };\n\n  const handleHandImage = useCallback(() => {\n    if (image === images.length - 1) {\n      setImage(0);\n    } else {\n      setImage(image + 1);\n    }\n  }, [image, images.length]);\n  useEffect(() => {\n    interval.current = setInterval(handleHandImage, 100);\n    return () => {\n      clearInterval(interval.current);\n    };\n  }, [handleHandImage]);\n\n  const handleGameResult = (currentMove, computerMove) => {\n    let result = '';\n\n    if (computerMove === images[0]) {\n      if (currentMove === '바위') {\n        result = '컴퓨터 승리';\n      } else if (currentMove === '가위') {\n        result = '비겼습니다.';\n      } else if (currentMove === '보') {\n        result = '유저 승리';\n      }\n    } else if (computerMove === images[1]) {\n      if (currentMove === '바위') {\n        result = '비겼습니다.';\n      } else if (currentMove === '가위') {\n        result = '컴퓨터 승리';\n      } else if (currentMove === '보') {\n        result = '유저 승리';\n      }\n    } else if (computerMove === images[2]) {\n      if (currentMove === '바위') {\n        result = '컴퓨터 승리';\n      } else if (currentMove === '가위') {\n        result = '유저 승리';\n      } else if (currentMove === '보') {\n        result = '비겼습니다';\n      }\n    }\n\n    if (result === '컴퓨터 승리') {\n      setScore(score => score - 10);\n    } else if (result === '유저 승리') {\n      setScore(score => score + 10);\n    }\n\n    return result;\n  };\n\n  const onClickHandButton = e => {\n    clearInterval(interval.current);\n    setIsPlaying(!isPlaying);\n    handleState({ ...state,\n      currentMove: e.target.textContent,\n      computerMove: images[image],\n      gameResult: handleGameResult(e.target.textContent, images[image])\n    });\n    interval.current = setInterval(handleHandImage, 500);\n  };\n\n  const createRPSButtons = () => {\n    const movementArray = ['가위', '바위', '보'];\n    return movementArray.map((el, i) => {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        content: el,\n        onClickEvent: onClickHandButton\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: e => e.preventDefault(),\n    children: [/*#__PURE__*/_jsxDEV(P, {\n      content: 'Computer',\n      style: {\n        color: 'blue',\n        fontWeight: 600\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(P, {\n      content: images[image],\n      style: {\n        fontSize: 80,\n        margin: 10,\n        padding: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), createRPSButtons(), /*#__PURE__*/_jsxDEV(P, {\n      content: 'User',\n      style: {\n        color: 'red',\n        fontWeight: 600\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(P, {\n      content: !currentMove ? '✌️' : printCurrentMove(),\n      style: {\n        fontSize: 80,\n        margin: 10,\n        padding: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RpsDisplayContainer, \"UGpnqmujOhqQaT0suIAWccjPY+g=\");\n\n_c = RpsDisplayContainer;\nexport default RpsDisplayContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RpsDisplayContainer\");","map":{"version":3,"names":["React","useCallback","useEffect","useRef","useState","Form","Button","P","RpsDisplayContainer","props","state","handleState","setScore","currentMove","images","image","setImage","isPlaying","setIsPlaying","interval","printCurrentMove","currentEmoji","handleHandImage","length","current","setInterval","clearInterval","handleGameResult","computerMove","result","score","onClickHandButton","e","target","textContent","gameResult","createRPSButtons","movementArray","map","el","i","preventDefault","color","fontWeight","fontSize","margin","padding"],"sources":["/Users/leezer/Desktop/codeStates/REACT_TYPESCRIPT_STUDY/react-study/src/pages/RpsGame/RpsDisplayContainer.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Form, Button, P } from '../../components';\n\nconst RpsDisplayContainer = (props) => {\n  const { state, handleState, setScore } = props;\n  let { currentMove } = state;\n\n  const images = ['✌️', '✊🏻', '🖐🏿'];\n  const [image, setImage] = useState(0);\n\n  const [isPlaying, setIsPlaying] = useState(true);\n\n  const interval = useRef();\n\n  const printCurrentMove = () => {\n    let currentEmoji;\n\n    if (currentMove === '가위') {\n      currentEmoji = '✌️';\n    } else if (currentMove === '바위') {\n      currentEmoji = '✊🏻';\n    } else if (currentMove === '보') {\n      currentEmoji = '🖐🏿';\n    }\n\n    return currentEmoji;\n  };\n\n  const handleHandImage = useCallback(() => {\n    if (image === images.length - 1) {\n      setImage(0);\n    } else {\n      setImage(image + 1);\n    }\n  }, [image, images.length]);\n\n  useEffect(() => {\n    interval.current = setInterval(handleHandImage, 100);\n\n    return () => {\n      clearInterval(interval.current);\n    };\n  }, [handleHandImage]);\n\n  const handleGameResult = (currentMove, computerMove) => {\n    let result = '';\n\n    if (computerMove === images[0]) {\n      if (currentMove === '바위') {\n        result = '컴퓨터 승리';\n      } else if (currentMove === '가위') {\n        result = '비겼습니다.';\n      } else if (currentMove === '보') {\n        result = '유저 승리';\n      }\n    } else if (computerMove === images[1]) {\n      if (currentMove === '바위') {\n        result = '비겼습니다.';\n      } else if (currentMove === '가위') {\n        result = '컴퓨터 승리';\n      } else if (currentMove === '보') {\n        result = '유저 승리';\n      }\n    } else if (computerMove === images[2]) {\n      if (currentMove === '바위') {\n        result = '컴퓨터 승리';\n      } else if (currentMove === '가위') {\n        result = '유저 승리';\n      } else if (currentMove === '보') {\n        result = '비겼습니다';\n      }\n    }\n\n    if (result === '컴퓨터 승리') {\n      setScore((score) => score - 10);\n    } else if (result === '유저 승리') {\n      setScore((score) => score + 10);\n    }\n\n    return result;\n  };\n\n  const onClickHandButton = (e) => {\n    clearInterval(interval.current);\n    setIsPlaying(!isPlaying);\n\n    handleState({\n      ...state,\n      currentMove: e.target.textContent,\n      computerMove: images[image],\n      gameResult: handleGameResult(e.target.textContent, images[image]),\n    });\n\n    interval.current = setInterval(handleHandImage, 500);\n  };\n\n  const createRPSButtons = () => {\n    const movementArray = ['가위', '바위', '보'];\n\n    return movementArray.map((el, i) => {\n      return <Button type='submit' key={i} content={el} onClickEvent={onClickHandButton} />;\n    });\n  };\n\n  return (\n    <Form onSubmit={(e) => e.preventDefault()}>\n      <P content={'Computer'} style={{ color: 'blue', fontWeight: 600 }} />\n      <P content={images[image]} style={{ fontSize: 80, margin: 10, padding: 0 }} />\n      {createRPSButtons()}\n      <P content={'User'} style={{ color: 'red', fontWeight: 600 }} />\n      <P content={!currentMove ? '✌️' : printCurrentMove()} style={{ fontSize: 80, margin: 10, padding: 0 }} />\n    </Form>\n  );\n};\n\nexport default RpsDisplayContainer;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,MAAxC,EAAgDC,QAAhD,QAAgE,OAAhE;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,CAAvB,QAAgC,kBAAhC;;;AAEA,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;EAAA;;EACrC,MAAM;IAAEC,KAAF;IAASC,WAAT;IAAsBC;EAAtB,IAAmCH,KAAzC;EACA,IAAI;IAAEI;EAAF,IAAkBH,KAAtB;EAEA,MAAMI,MAAM,GAAG,CAAC,IAAD,EAAO,KAAP,EAAc,MAAd,CAAf;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CAAD,CAAlC;EAEA,MAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,IAAD,CAA1C;EAEA,MAAMe,QAAQ,GAAGhB,MAAM,EAAvB;;EAEA,MAAMiB,gBAAgB,GAAG,MAAM;IAC7B,IAAIC,YAAJ;;IAEA,IAAIR,WAAW,KAAK,IAApB,EAA0B;MACxBQ,YAAY,GAAG,IAAf;IACD,CAFD,MAEO,IAAIR,WAAW,KAAK,IAApB,EAA0B;MAC/BQ,YAAY,GAAG,KAAf;IACD,CAFM,MAEA,IAAIR,WAAW,KAAK,GAApB,EAAyB;MAC9BQ,YAAY,GAAG,MAAf;IACD;;IAED,OAAOA,YAAP;EACD,CAZD;;EAcA,MAAMC,eAAe,GAAGrB,WAAW,CAAC,MAAM;IACxC,IAAIc,KAAK,KAAKD,MAAM,CAACS,MAAP,GAAgB,CAA9B,EAAiC;MAC/BP,QAAQ,CAAC,CAAD,CAAR;IACD,CAFD,MAEO;MACLA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;IACD;EACF,CANkC,EAMhC,CAACA,KAAD,EAAQD,MAAM,CAACS,MAAf,CANgC,CAAnC;EAQArB,SAAS,CAAC,MAAM;IACdiB,QAAQ,CAACK,OAAT,GAAmBC,WAAW,CAACH,eAAD,EAAkB,GAAlB,CAA9B;IAEA,OAAO,MAAM;MACXI,aAAa,CAACP,QAAQ,CAACK,OAAV,CAAb;IACD,CAFD;EAGD,CANQ,EAMN,CAACF,eAAD,CANM,CAAT;;EAQA,MAAMK,gBAAgB,GAAG,CAACd,WAAD,EAAce,YAAd,KAA+B;IACtD,IAAIC,MAAM,GAAG,EAAb;;IAEA,IAAID,YAAY,KAAKd,MAAM,CAAC,CAAD,CAA3B,EAAgC;MAC9B,IAAID,WAAW,KAAK,IAApB,EAA0B;QACxBgB,MAAM,GAAG,QAAT;MACD,CAFD,MAEO,IAAIhB,WAAW,KAAK,IAApB,EAA0B;QAC/BgB,MAAM,GAAG,QAAT;MACD,CAFM,MAEA,IAAIhB,WAAW,KAAK,GAApB,EAAyB;QAC9BgB,MAAM,GAAG,OAAT;MACD;IACF,CARD,MAQO,IAAID,YAAY,KAAKd,MAAM,CAAC,CAAD,CAA3B,EAAgC;MACrC,IAAID,WAAW,KAAK,IAApB,EAA0B;QACxBgB,MAAM,GAAG,QAAT;MACD,CAFD,MAEO,IAAIhB,WAAW,KAAK,IAApB,EAA0B;QAC/BgB,MAAM,GAAG,QAAT;MACD,CAFM,MAEA,IAAIhB,WAAW,KAAK,GAApB,EAAyB;QAC9BgB,MAAM,GAAG,OAAT;MACD;IACF,CARM,MAQA,IAAID,YAAY,KAAKd,MAAM,CAAC,CAAD,CAA3B,EAAgC;MACrC,IAAID,WAAW,KAAK,IAApB,EAA0B;QACxBgB,MAAM,GAAG,QAAT;MACD,CAFD,MAEO,IAAIhB,WAAW,KAAK,IAApB,EAA0B;QAC/BgB,MAAM,GAAG,OAAT;MACD,CAFM,MAEA,IAAIhB,WAAW,KAAK,GAApB,EAAyB;QAC9BgB,MAAM,GAAG,OAAT;MACD;IACF;;IAED,IAAIA,MAAM,KAAK,QAAf,EAAyB;MACvBjB,QAAQ,CAAEkB,KAAD,IAAWA,KAAK,GAAG,EAApB,CAAR;IACD,CAFD,MAEO,IAAID,MAAM,KAAK,OAAf,EAAwB;MAC7BjB,QAAQ,CAAEkB,KAAD,IAAWA,KAAK,GAAG,EAApB,CAAR;IACD;;IAED,OAAOD,MAAP;EACD,CApCD;;EAsCA,MAAME,iBAAiB,GAAIC,CAAD,IAAO;IAC/BN,aAAa,CAACP,QAAQ,CAACK,OAAV,CAAb;IACAN,YAAY,CAAC,CAACD,SAAF,CAAZ;IAEAN,WAAW,CAAC,EACV,GAAGD,KADO;MAEVG,WAAW,EAAEmB,CAAC,CAACC,MAAF,CAASC,WAFZ;MAGVN,YAAY,EAAEd,MAAM,CAACC,KAAD,CAHV;MAIVoB,UAAU,EAAER,gBAAgB,CAACK,CAAC,CAACC,MAAF,CAASC,WAAV,EAAuBpB,MAAM,CAACC,KAAD,CAA7B;IAJlB,CAAD,CAAX;IAOAI,QAAQ,CAACK,OAAT,GAAmBC,WAAW,CAACH,eAAD,EAAkB,GAAlB,CAA9B;EACD,CAZD;;EAcA,MAAMc,gBAAgB,GAAG,MAAM;IAC7B,MAAMC,aAAa,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,GAAb,CAAtB;IAEA,OAAOA,aAAa,CAACC,GAAd,CAAkB,CAACC,EAAD,EAAKC,CAAL,KAAW;MAClC,oBAAO,QAAC,MAAD;QAAQ,IAAI,EAAC,QAAb;QAA8B,OAAO,EAAED,EAAvC;QAA2C,YAAY,EAAER;MAAzD,GAA2BS,CAA3B;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAFM,CAAP;EAGD,CAND;;EAQA,oBACE,QAAC,IAAD;IAAM,QAAQ,EAAGR,CAAD,IAAOA,CAAC,CAACS,cAAF,EAAvB;IAAA,wBACE,QAAC,CAAD;MAAG,OAAO,EAAE,UAAZ;MAAwB,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAT;QAAiBC,UAAU,EAAE;MAA7B;IAA/B;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,CAAD;MAAG,OAAO,EAAE7B,MAAM,CAACC,KAAD,CAAlB;MAA2B,KAAK,EAAE;QAAE6B,QAAQ,EAAE,EAAZ;QAAgBC,MAAM,EAAE,EAAxB;QAA4BC,OAAO,EAAE;MAArC;IAAlC;MAAA;MAAA;MAAA;IAAA,QAFF,EAGGV,gBAAgB,EAHnB,eAIE,QAAC,CAAD;MAAG,OAAO,EAAE,MAAZ;MAAoB,KAAK,EAAE;QAAEM,KAAK,EAAE,KAAT;QAAgBC,UAAU,EAAE;MAA5B;IAA3B;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE,QAAC,CAAD;MAAG,OAAO,EAAE,CAAC9B,WAAD,GAAe,IAAf,GAAsBO,gBAAgB,EAAlD;MAAsD,KAAK,EAAE;QAAEwB,QAAQ,EAAE,EAAZ;QAAgBC,MAAM,EAAE,EAAxB;QAA4BC,OAAO,EAAE;MAArC;IAA7D;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CA9GD;;GAAMtC,mB;;KAAAA,mB;AAgHN,eAAeA,mBAAf"},"metadata":{},"sourceType":"module"}