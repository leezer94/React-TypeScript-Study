{"ast":null,"code":"var _jsxFileName = \"/Users/leezer/Desktop/codeStates/REACT_TYPESCRIPT_STUDY/react-study/src/components/multiplication-table/Game-main-container.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Form, P, Input, Button } from '..';\nimport { CLASSNAME, COLOR } from '../../common/constants/constants.js';\nimport { getRightEqualSignLetter, clearInputValue } from '../../utils/utils.js';\nimport { isValidNumberTypeInput } from '../../utils/validator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MultiplicationMainContainer = props => {\n  _s();\n\n  const {\n    state,\n    updateStateNumbers,\n    evaluation,\n    handleEvaluation\n  } = props;\n  const [isNumberType, setIsNumberType] = useState(true); // Ref\n\n  const multiplicationInput = useRef();\n  const multiplicationForm = useRef();\n  const notANumberMessage = useRef();\n  const incorrectMessage = useRef(); // handlers\n\n  const {\n    firstNumber,\n    secondNumber,\n    sum\n  } = state;\n\n  const onClickSubmitButton = () => {\n    isNumberTypeInputValue(multiplicationInput);\n    isValidNumberTypeInput(multiplicationInput, sum, Number) ? updateStateNumbers() : handleEvaluation(false);\n    clearInputValue(multiplicationInput);\n  };\n\n  const isNumberTypeInputValue = input => {\n    isNaN(input.current.value) ? setIsNumberType(false) : setIsNumberType(true);\n  };\n\n  const handleKeyPressEvent = e => {\n    return e.key === 'Enter' ? handleNumberSubmit(e) : undefined;\n  };\n\n  const handleNumberSubmit = e => {\n    e.preventDefault();\n    onClickSubmitButton();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      ref: multiplicationForm,\n      onSubmit: handleNumberSubmit,\n      children: [/*#__PURE__*/_jsxDEV(P, {\n        title: `${firstNumber} 곱하기 ${secondNumber} ${getRightEqualSignLetter(secondNumber)}?`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: 'text',\n        ref: multiplicationInput,\n        onKeyPressEvent: handleKeyPressEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: 'submit',\n        title: '입력'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(P, {\n        className: !evaluation ? undefined : CLASSNAME.HIDE,\n        ref: incorrectMessage,\n        style: {\n          color: COLOR.RED\n        },\n        title: `정답이 아닙니다.`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(P, {\n        className: !isNumberType ? undefined : CLASSNAME.HIDE,\n        ref: notANumberMessage,\n        style: {\n          color: COLOR.RED\n        },\n        title: '숫자만 입력이 가능합니다.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(MultiplicationMainContainer, \"XJaIUFKqlJo/xrT7HTVbL2CFxfI=\");\n\n_c = MultiplicationMainContainer;\nexport default MultiplicationMainContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultiplicationMainContainer\");","map":{"version":3,"names":["React","useRef","useState","Form","P","Input","Button","CLASSNAME","COLOR","getRightEqualSignLetter","clearInputValue","isValidNumberTypeInput","MultiplicationMainContainer","props","state","updateStateNumbers","evaluation","handleEvaluation","isNumberType","setIsNumberType","multiplicationInput","multiplicationForm","notANumberMessage","incorrectMessage","firstNumber","secondNumber","sum","onClickSubmitButton","isNumberTypeInputValue","Number","input","isNaN","current","value","handleKeyPressEvent","e","key","handleNumberSubmit","undefined","preventDefault","HIDE","color","RED"],"sources":["/Users/leezer/Desktop/codeStates/REACT_TYPESCRIPT_STUDY/react-study/src/components/multiplication-table/Game-main-container.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport { Form, P, Input, Button } from '..';\nimport { CLASSNAME, COLOR } from '../../common/constants/constants.js';\nimport { getRightEqualSignLetter, clearInputValue } from '../../utils/utils.js';\nimport { isValidNumberTypeInput } from '../../utils/validator';\n\nconst MultiplicationMainContainer = (props) => {\n  const { state, updateStateNumbers, evaluation, handleEvaluation } = props;\n  const [isNumberType, setIsNumberType] = useState(true);\n\n  // Ref\n  const multiplicationInput = useRef();\n  const multiplicationForm = useRef();\n  const notANumberMessage = useRef();\n  const incorrectMessage = useRef();\n\n  // handlers\n\n  const { firstNumber, secondNumber, sum } = state;\n\n  const onClickSubmitButton = () => {\n    isNumberTypeInputValue(multiplicationInput);\n    isValidNumberTypeInput(multiplicationInput, sum, Number) ? updateStateNumbers() : handleEvaluation(false);\n    clearInputValue(multiplicationInput);\n  };\n\n  const isNumberTypeInputValue = (input) => {\n    isNaN(input.current.value) ? setIsNumberType(false) : setIsNumberType(true);\n  };\n\n  const handleKeyPressEvent = (e) => {\n    return e.key === 'Enter' ? handleNumberSubmit(e) : undefined;\n  };\n\n  const handleNumberSubmit = (e) => {\n    e.preventDefault();\n\n    onClickSubmitButton();\n  };\n\n  return (\n    <>\n      <Form ref={multiplicationForm} onSubmit={handleNumberSubmit}>\n        <P title={`${firstNumber} 곱하기 ${secondNumber} ${getRightEqualSignLetter(secondNumber)}?`}></P>\n        <Input type={'text'} ref={multiplicationInput} onKeyPressEvent={handleKeyPressEvent} />\n        <Button type={'submit'} title={'입력'}></Button>\n        <P className={!evaluation ? undefined : CLASSNAME.HIDE} ref={incorrectMessage} style={{ color: COLOR.RED }} title={`정답이 아닙니다.`} />\n        <P className={!isNumberType ? undefined : CLASSNAME.HIDE} ref={notANumberMessage} style={{ color: COLOR.RED }} title={'숫자만 입력이 가능합니다.'} />\n      </Form>\n    </>\n  );\n};\n\nexport default MultiplicationMainContainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}